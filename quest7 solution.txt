class Solution {
    public long kthSmallestProduct(int[] nums1, int[] nums2, long k) 
    {
     int l1= nums1.length;
     int l2 = nums2.length;
     int l3 = l1*l2;
     long prodc= 1;
     int count = 0;
     
     long[]prod= new long[l3];
     for(int i=0; i<l1; i++)
     {
        for( int j = 0; j<l2; j++)
        {
            prodc= (long)nums1[i] * nums2[j];
            prod[count]=prodc;
            count++;
        }
     } 
     Arrays.sort(prod);
     long m = prod[(int)k-1];
     return m;
    } 
    

}


Given two sorted 0-indexed integer arrays nums1 and nums2 as well as an integer k, return the kth (1-based) smallest product of nums1[i] * nums2[j] where 0 <= i < nums1.length and 0 <= j < nums2.length.